/* Start of Code */

#include "FastLED.h"

// How many leds are connected?
#define NUM_LEDS 252

// Define the Pins
#define DATA_PIN 7

// Define the array of leds
CRGB leds[NUM_LEDS];

// Put color values in arrays
long invader1a[] =
{
0xffffff, 0xffffff, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfcd20e, 0xffffff, 0xfcd20e, 0xffffff, 0xffffff, 0xffffff, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0x0035a9, 0xffffff, 0xffffff, 0xfcd20e, 0xfcd20e, 0xfcd20e, 0xfcd20e, 0xfcd20e, 0xfcd20e, 0xfcd20e, 0xffffff, 0xffffff, 0xffffff, 0xfcd20e, 0xfcd20e, 0xffffff, 0xffffff, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0x671e65, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfcd20e, 0xffffff, 0xfcd20e, 0xffffff, 0xffffff, 0xffffff, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xffffff, 0xffffff, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821, 0xcf0821,
};
long invader1b[] =
{
 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030103, 0x060304, 0x020104, 0x23252a, 0x2a2b2f, 0x04070b, 0x000104, 0x030206, 0x030206, 0x040205, 0x010002, 0x050106, 0x010002, 0x09090b, 0x010204, 0x5a5b5d, 0xc0c8cb, 0xbdc5c7, 0x010505, 0x020204, 0x030106, 0x020106, 0x020106, 0x020106, 0x020106, 0x050609, 0x030305, 0xc9d1da, 0xbecad5, 0xc1cfdd, 0x9b9fa6, 0x030102, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x020106, 0x07070c, 0x838c95, 0x969ea8, 0xa2abb7, 0xa8b1bc, 0xb3bec9, 0xc0cbd6, 0xcfdde9, 0xd3e1ec, 0xd7e5eb, 0xcbd8e4, 0xb6c3d0, 0x86949e, 0xb3c1cb, 0xa1afb9, 0xcad8e2, 0xccdae7, 0xd2e0ed, 0xd4e2ef, 0xd1ddec, 0xd4e0ef, 0xd2deed, 0xcad6e5, 0xb6c4d5, 0xafbdce, 0xacb5c1, 0xd2dbe2, 0xa4acb2, 0x6d7072, 0x040507, 0x060407, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x0c1012, 0xe3f2fa, 0xeefcff, 0x05070a, 0x020305, 0xbcc3c9, 0xbcc5ca, 0xa6b0b3, 0x000205, 0x030207, 0x020106, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030106, 0x050100, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x020106, 0x020106, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104, 0x030104,
 };

void setup() { 
  FastLED.addLeds<NEOPIXEL ,DATA_PIN >(leds, NUM_LEDS);
//FastLED.addLeds<WS2811, 6 , GRB>(leds, NUM_LEDS);

}

void loop() { 



// Loop for the Matrix example

FastLED.clear();


for(int i = 0; i < NUM_LEDS; i++) {
leds[i] = invader1a[i];
}
FastLED.setBrightness(35);
FastLED.show();
delay(500);

for(int i = 0; i < NUM_LEDS; i++) {
leds[i] = invader1b[i];
}

FastLED.setBrightness(35);
FastLED.show();
delay(500);


}

/* End of Code */
